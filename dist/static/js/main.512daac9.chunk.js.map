{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["SignedInLinks","props","dispatch","useDispatch","firebase","useFirebase","signUserOut","useCallback","getState","auth","signOut","then","type","className","to","onClick","profile","initials","SignedOutLinks","Navbar","useSelector","state","console","log","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","connect","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","selector","authError","useState","email","password","emailAndPassword","setEmailAndPassword","handleChange","e","target","value","onSubmit","preventDefault","credentials","signInWithEmailAndPassword","catch","err","signIn","htmlFor","onChange","SignUp","useFirestore","firstName","lastName","newUser","setNewUser","createUserWithEmailAndPassword","resp","doc","set","signUp","CreateProject","setProject","authorId","add","Date","createProject","history","push","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","composeEnhancers","composeWithDevTools","realtime","store","createStore","applyMiddleware","thunk","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","AuthIsLoaded","children","isLoaded","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.512daac9.chunk.js","sourcesContent":["import React, { useCallback } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { signOut } from \"../../store/actions/authActions\";\n\nconst SignedInLinks = (props) => {\n  const dispatch = useDispatch();\n  const firebase = useFirebase();\n\n  // how does this work???\n  const signUserOut = useCallback(() => {\n    dispatch(signOut({ firebase }));\n  }, [dispatch, firebase]);\n\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/create\">New Project</NavLink>\n      </li>\n      <li>\n        <a onClick={signUserOut}>Log Out</a>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\n          {props.profile.initials}\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignedInLinks;\n","// import { useFirebase } from \"react-redux-firebase\";\n\n// const firebase = useFirebase();\n\nexport const signIn = ({ firebase }, credentials) => {\n  return (dispatch, getState) => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: \"LOGIN_SUCCESS\" });\n      })\n      .catch((err) => {\n        dispatch({ type: \"LOGIN_ERROR\", err });\n      });\n  };\n};\n\nexport const signOut = ({ firebase }) => {\n  return (dispatch, getState) => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\n      });\n  };\n};\n\nexport const signUp = ({ firebase }, { firestore }, newUser) => {\n  return (dispatch, getState) => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then((resp) => {\n        return firestore\n          .collection(\"users\")\n          .doc(resp.user.uid)\n          .set({\n            firstName: newUser.firstName,\n            lastName: newUser.lastName,\n            initials: newUser.firstName[0] + newUser.lastName[0],\n          });\n      })\n      .then(() => {\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\n      })\n      .catch((err) => {\n        dispatch({ type: \"SIGNUP_ERROR\", err });\n      });\n  };\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/signup\">Sign Up</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signin\">Login</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport { useSelector } from \"react-redux\";\n\nconst Navbar = () => {\n  // how this works???\n  const auth = useSelector((state) => state.firebase.auth);\n  const profile = useSelector((state) => state.firebase.profile);\n\n  console.log(auth);\n  const links = auth.uid ? (\n    <SignedInLinks profile={profile} />\n  ) : (\n    <SignedOutLinks />\n  );\n\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo\">\n          MarioPlan\n        </Link>\n        {links}\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst Notifications = (props) => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"notifications\">\n            {notifications &&\n              notifications.map((item) => {\n                return (\n                  <li key={item.id}>\n                    <span className=\"pink-text\">{item.user} </span>\n                    <span>{item.content}</span>\n                    <div className=\"grey-text note-date\">\n                      {moment(item.time.toDate()).fromNow()}\n                    </div>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst ProjectSummary = ({ project }) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{project.title}</span>\n        <p>\n          Posted by {project.authorFirstName} {project.authorLastName}\n        </p>\n        <p className=\"grey-text\">\n          {moment(project.createdAt.toDate()).calendar()}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectSummary;\n","import React from \"react\";\nimport ProjectSummary from \"./ProjectSummary\";\nimport { Link } from \"react-router-dom\";\n\nconst ProjectList = ({ projects }) => {\n  return (\n    <div className=\"project-list section\">\n      {projects &&\n        projects.map((project) => {\n          return (\n            <Link to={\"/project/\" + project.id} key={project.id}>\n              <ProjectSummary project={project} />\n            </Link>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import React, { Component } from \"react\";\nimport Notifications from \"./Notifications\";\nimport ProjectList from \"../projects/ProjectList\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Dashboard extends Component {\n  render() {\n    // console.log(this.props);\n    const { projects, auth, notifications } = this.props;\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col 12 m5 offset-m1\">\n            <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] },\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] },\n  ])\n)(Dashboard);\n","import React from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\n\nconst ProjectDetails = (props) => {\n  const { project } = props;\n  const auth = useSelector((state) => state.firebase.auth);\n\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\n\n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n\n          <div className=\"card-action gret ligthen-4 grey-text\">\n            <div>\n              Posted by {project.authorFirstName} {project.authorLastName}\n            </div>\n            <div> {moment(project.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(state);\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n\n  return {\n    project: project,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"projects\" }])\n)(ProjectDetails);\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { signIn } from \"../../store/actions/authActions\";\n// import { useFirebaseConnect, useFirebase } from \"react-redux-firebase\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { Redirect } from \"react-router-dom\";\n\nconst SignIn = (props) => {\n  const firebase = useFirebase();\n\n  // how does this work???\n  const selector = useSelector((state) => state.auth.authError);\n  const auth = useSelector((state) => state.firebase.auth);\n  const dispatch = useDispatch();\n\n  const [emailAndPassword, setEmailAndPassword] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleChange = (e) => {\n    setEmailAndPassword({ ...emailAndPassword, [e.target.id]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(signIn({ firebase }, emailAndPassword));\n  };\n\n  if (auth.uid) return <Redirect to=\"/\" />;\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit} className=\"white\">\n        <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n        <div className=\"input-field\">\n          <label htmlFor=\"email\">Email</label>\n          <input type=\"email\" id=\"email\" onChange={handleChange} />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"password\">Password</label>\n          <input type=\"password\" id=\"password\" onChange={handleChange} />\n        </div>\n        <div className=\"input-field\">\n          <button className=\"btn pink ligthen-1 z-depth-0\">Login</button>\n          <div className=\"red-text center\">\n            {selector ? <p>{selector}</p> : null}\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default SignIn;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { signUp } from \"../../store/actions/authActions\";\nimport { useFirebase, useFirestore } from \"react-redux-firebase\";\nimport { Redirect } from \"react-router-dom\";\n\nconst SignUp = () => {\n  const firebase = useFirebase();\n  const firestore = useFirestore();\n\n  // how does this work???\n  const authError = useSelector((state) => state.auth.authError);\n  const auth = useSelector((state) => state.firebase.auth);\n  const dispatch = useDispatch();\n\n  const [newUser, setNewUser] = useState({\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n  });\n\n  const handleChange = (e) => {\n    setNewUser({ ...newUser, [e.target.id]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(signUp({ firebase }, { firestore }, newUser));\n  };\n\n  if (auth.uid) return <Redirect to=\"/\" />;\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit} className=\"white\">\n        <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n        <div className=\"input-field\">\n          <label htmlFor=\"email\">Email</label>\n          <input type=\"email\" id=\"email\" onChange={handleChange} />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"password\">Password</label>\n          <input type=\"password\" id=\"password\" onChange={handleChange} />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"firstName\">First Name</label>\n          <input type=\"text\" id=\"firstName\" onChange={handleChange} />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"lastName\">Last Name</label>\n          <input type=\"text\" id=\"lastName\" onChange={handleChange} />\n        </div>\n        <div className=\"input-field\">\n          <button className=\"btn pink ligthen-1 z-depth-0\">Sign Up</button>\n          <div className=\"red-text center\">\n            {authError ? <p>{authError}</p> : null}\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import React, { useState /*, useCallback*/ } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { createProject } from \"../../store/actions/projectActions\";\n// import { useFirestoreConnect, useFirestore } from \"react-redux-firebase\";\nimport { useFirestore } from \"react-redux-firebase\";\nimport { Redirect } from \"react-router-dom\";\n\nconst CreateProject = (props) => {\n  // how does this work???\n  const firestore = useFirestore();\n  // how does this work???\n  // useFirestoreConnect(\"projects\");\n\n  // how does this work???\n  // const projects = useSelector((state) => state.firestore.ordered.projects);\n  // console.log(projects);\n  // const projects = useSelector((state) => state.firestore.data.projects);\n\n  const auth = useSelector((state) => state.firebase.auth);\n  const dispatch = useDispatch();\n\n  // how does this work???\n  // const addProject = useCallback(\n  //   (project) => dispatch(createProject({ firestore }, project)),\n  //   [firestore]\n  // );\n\n  const [project, setProject] = useState({ title: \"\", content: \"\" });\n\n  const handleChange = (e) => {\n    setProject({ ...project, [e.target.id]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // addProject(project);\n    dispatch(createProject({ firestore }, project));\n    props.history.push(\"/\");\n  };\n\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit} className=\"white\">\n        <h5 className=\"grey-text text-darken-3\">Create new project</h5>\n        <div className=\"input-field\">\n          <label htmlFor=\"title\">Title</label>\n          <input type=\"text\" id=\"title\" onChange={handleChange} />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"content\">Project Content</label>\n          <textarea\n            id=\"content\"\n            className=\"materialize-textarea\"\n            onChange={handleChange}\n          ></textarea>\n        </div>\n        <div className=\"input-field\">\n          <button className=\"btn pink ligthen-1 z-depth-0\">Create</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateProject;\n","export const createProject = ({ firestore }, project) => {\n  return (dispatch, getState) => {\n    // make async call to database\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n\n    firestore\n      .collection(\"projects\")\n      .add({\n        ...project,\n        authorFirstName: profile.firstName,\n        authorLastName: profile.lastName,\n        authorId: authorId,\n        createdAt: new Date(),\n      })\n      .then(() => {\n        dispatch({ type: \"CREATE_PROJECT\", project });\n      })\n      .catch((err) => {\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", err });\n      });\n  };\n};\n","import React /*, { Component }*/ from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetails} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n\n// class App extends Component {\n//   render() {\n//     return (\n//       <BrowserRouter>\n//         <div className=\"App\">\n//           <h1>MarioPlan</h1>\n//         </div>\n//       </BrowserRouter>\n//     );\n//   }\n// }\n\n// export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n  authError: null,\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGIN_ERROR\":\n      console.log(\"login error\");\n      return { ...state, authError: \"Login failed\" };\n\n    case \"LOGIN_SUCCESS\":\n      console.log(\"login success\");\n      return { ...state, authError: null };\n\n    case \"SIGNOUT_SUCCESS\":\n      console.log(\"signout success\");\n      return state;\n\n    case \"SIGNUP_SUCCESS\":\n      console.log(\"signup success\");\n      return {\n        ...state,\n        authError: null,\n      };\n\n    case \"SIGNUP_ERROR\":\n      console.log(\"signup error\");\n      return {\n        ...state,\n        authError: action.err.message,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const initState = {\n  projects: [\n    { id: \"1\", title: \"help me find peach\", content: \"blah blah blah\" },\n    { id: \"2\", title: \"collect all the stars\", content: \"blah blah blah\" },\n    { id: \"3\", title: \"egg hunt with yoshi\", content: \"blah blah blah\" },\n  ],\n};\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"CREATE_PROJECT\":\n      console.log(\"created project\", action.project);\n      return state;\n\n    case \"CREATE_PROJECT_ERROR\":\n      console.log(\"create project error\", action.err);\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;\n","import authReducer from \"./authReducer\";\nimport projectReducer from \"./projectReducer\";\nimport { combineReducers } from \"redux\";\nimport { firebaseReducer } from \"react-redux-firebase\";\nimport { firestoreReducer } from \"redux-firestore\"; // <- needed if using firestore\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firebase: firebaseReducer,\n  firestore: firestoreReducer, // <- needed if using firestore\n});\n\nexport default rootReducer;\n","// imports just the base features of the firebase library\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: \"AIzaSyA5zKJl9dNuAQWkE-Qn72Np-CELiRA4Bp4\",\n  authDomain: \"net-ninja-marioplan-43fda.firebaseapp.com\",\n  databaseURL: \"https://net-ninja-marioplan-43fda.firebaseio.com\",\n  projectId: \"net-ninja-marioplan-43fda\",\n  storageBucket: \"net-ninja-marioplan-43fda.appspot.com\",\n  messagingSenderId: \"512485617745\",\n  appId: \"1:512485617745:web:c5c9715d364436ac248870\",\n  measurementId: \"G-SVKXE0EGY5\",\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore();\n// firebase.analytics();\n\nexport default firebase;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider, useSelector } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { createFirestoreInstance } from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, isLoaded } from \"react-redux-firebase\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport firebase from \"./config/fbConfig\";\n\n// how does this work???\nconst composeEnhancers = composeWithDevTools({\n  realtime: true,\n  // options like actionSanitizer, stateSanitizer\n});\n\n// react-redux-firebase config\nconst rrfConfig = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\n};\n\nconst initialState = {};\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector((state) => state.firebase.auth);\n  if (!isLoaded(auth)) {\n    return <div>Loading Screen...</div>;\n  }\n  return children;\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <AuthIsLoaded>\n          <App />\n        </AuthIsLoaded>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}